<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 配置解析properties文件的工具类 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>

	<!-- 注册c3p0数据源   name值是固定的，c3p0.ComboPooledDataSource的设置-->
	<bean id="abstractDataSource" abstract="true" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		 <!-- c3p0数据源的私有属性 -->
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		<!-- 关闭连接后，不自动提交 -->
		<property name="autoCommitOnClose" value="false"/>
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="10000" />
		<!-- 获取连接失败，重试次数 -->
		<property name="acquireIncrement" value="2" />
	</bean>
	
	<bean id="master" parent="abstractDataSource">
		<property name="driverClass" value="${jdbc.driver}"/>
		<property name="jdbcUrl" value="${jdbc.master.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<bean id="slave" parent="abstractDataSource">
		<property name="driverClass" value="${jdbc.driver}"/>
		<property name="jdbcUrl" value="${jdbc.slave.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>

	<!-- 配置动态数据源，targetDataSources就是路由数据源 -->
	<bean id="dynamicDataSource" class="com.wyj.dao.split.DynamicDataSource" >
		<property name="targetDataSources">
			<map>
				<entry value-ref="master" key="master"></entry>
				<entry value-ref="slave" key="slave"></entry>
			</map>
		</property>
	</bean>

	<bean id="dataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
		<property name="targetDataSource">
			<ref bean="dynamicDataSource"/>
		</property>
	</bean>
	<!--druid数据源-->
	<!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">-->
	<!--<property name="url" value="${jdbc.url}" />-->
	<!--<property name="username" value="${jdbc.username}" />-->
	<!--<property name="password" value="${jdbc.password}" />-->
	<!--<property name="driverClassName" value="${jdbc.driver}" />-->
	<!--<property name="maxActive" value="10" />-->
	<!--<property name="minIdle" value="5" />-->
	<!--</bean>-->

	<!-- 创建mybatis的上下文对象  -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="typeAliasesPackage" value="com.wyj.pojo" />
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>
	
	<!-- 扫描mybatis的接口与映射配置文件 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.wyj.dao"/>
			<!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
		</bean>

</beans>
